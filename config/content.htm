<h1>About</h1>
<p><span style="color: #ff99cc;">wcm2022課程網站連結</span></p>
<p><span style="color: #ff00ff;">網站</span>:<a href="https://kehueisin.github.io/wcm2022/">https://kehueisin.github.io/wcm2022/</a></p>
<p><span style="color: #ff00ff;">倉儲</span>:<a href="https://github.com/KEHUEISIN/wcm2022">https://github.com/KEHUEISIN/wcm2022</a></p>
<p><span style="color: #ff00ff;">分組網站</span>:<a href="https://kehueisin.github.io/wcm2022ag1/">https://kehueisin.github.io/wcm2022ag1/</a></p>
<p><span style="color: #ff00ff;">分組倉儲</span>:<a href="https://github.com/KEHUEISIN/wcm2022ag1">https://github.com/KEHUEISIN/wcm2022ag1</a></p>
<p><span style="background-color: #ffff00;">此為個人網站首頁!!</span></p>
<p>----------------------------------------------------------------------------------------------</p>
<h1>Experience:</h1>
<p><span style="background-color: #ffff00;"><strong>此頁為學習及筆記紀錄</strong></span></p>
<h2>Github</h2>
<p><span style="color: #ff00ff;">創建個人及分組網站倉儲：</span><a href="https://github.com/KEHUEISIN/wcm2022">https://github.com/KEHUEISIN/wcm2022</a> ，<a href="https://github.com/KEHUEISIN/wcm2022ag1">https://github.com/KEHUEISIN/wcm2022ag1</a>可自己建紙模組。</p>
<h2>onedrive</h2>
<p>因其只有5GB，當備份太多時，則電腦內的磁碟會無發運行。</p>
<p><span style="background-color: #ffcc00;">解決方法</span>:進入ONEDRIVE設定內，管理備份將它停止備份資料夾，後再到網站登入，將ONEDRIVE裡備份的資料夾全部刪掉，就可。</p>
<p>影片同下:</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<h2>Wink</h2>
<p>需先錄製一段影片，後到老師所給的網站加入超文件範本，將影片插入我所要放置的頁面，並將超文</p>
<p>件內的(名稱.mp4)改成自己所設的名稱。</p>
<h1>H1 midterm</h1>
<p>四技中任務影片</p>
<h1>W13</h1>
<p>俄羅斯方塊</p>
<!-- 導入 Brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){brython();}
</script>
<script type="text/python3">
#print("可執行 Brython")

# from https://levelup.gitconnected.com/writing-tetris-in-python-2a16bddb5318
# 暫時關閉 system proxy 設定後,  pip install pygame
#import pygame
import random
# 以下為 Brython 新增
from browser import document as doc
from browser import html
import browser.timer

# 利用 html 建立一個 CANVAS 標註物件, 與變數 canvas 對應
canvas = html.CANVAS(width = 400, height = 500, id="canvas")
brython_div = doc["brython_div"]
brython_div <= canvas
ctx = canvas.getContext("2d")

colors = [
    (0, 0, 0),
    (120, 37, 179),
    (100, 179, 179),
    (80, 34, 22),
    (80, 134, 22),
    (180, 34, 22),
    (180, 34, 122),
]


class Figure:
    x = 0
    y = 0

    figures = [
        [[1, 5, 9, 13], [4, 5, 6, 7]],
        [[4, 5, 9, 10], [2, 6, 5, 9]],
        [[6, 7, 9, 10], [1, 5, 6, 10]],
        [[1, 2, 5, 9], [0, 4, 5, 6], [1, 5, 9, 8], [4, 5, 6, 10]],
        [[1, 2, 6, 10], [5, 6, 7, 9], [2, 6, 10, 11], [3, 5, 6, 7]],
        [[1, 4, 5, 6], [1, 4, 5, 9], [4, 5, 6, 9], [1, 5, 6, 9]],
        [[1, 2, 5, 6]],
    ]

    def __init__(self, x, y):
        self.x = x
        self.y = y
        self.type = random.randint(0, len(self.figures) - 1)
        self.color = random.randint(1, len(colors) - 1)
        self.rotation = 0

    def image(self):
        return self.figures[self.type][self.rotation]

    def rotate(self):
        self.rotation = (self.rotation + 1) % len(self.figures[self.type])


class Tetris:
    level = 2
    score = 0
    state = "start"
    field = []
    height = 0
    width = 0
    x = 100
    y = 60
    zoom = 20
    figure = None

    def __init__(self, height, width):
        self.height = height
        self.width = width
        self.field = []
        self.score = 0
        self.state = "start"
        for i in range(height):
            new_line = []
            for j in range(width):
                # 起始時每一個都填入 0
                new_line.append(0)
            self.field.append(new_line)

    def new_figure(self):
        self.figure = Figure(3, 0)

    def intersects(self):
        intersection = False
        for i in range(4):
            for j in range(4):
                if i * 4 + j in self.figure.image():
                    # block 到達底部, 左右兩邊界, 或該座標有其他 block
                    if i + self.figure.y > self.height - 1 or \
                            j + self.figure.x > self.width - 1 or \
                            j + self.figure.x < 0 or \
                            self.field[i + self.figure.y][j + self.figure.x] > 0:
                        intersection = True
        return intersection

    def break_lines(self):
        lines = 0
        for i in range(1, self.height):
            zeros = 0
            for j in range(self.width):
                if self.field[i][j] == 0:
                    zeros += 1
            if zeros == 0:
                lines += 1
                for i1 in range(i, 1, -1):
                    for j in range(self.width):
                        self.field[i1][j] = self.field[i1 - 1][j]
        self.score += lines ** 2

    def go_space(self):
        while not self.intersects():
            self.figure.y += 1
        self.figure.y -= 1
        self.freeze()

    def go_down(self):
        self.figure.y += 1
        if self.intersects():
            self.figure.y -= 1
            self.freeze()

    def freeze(self):
        for i in range(4):
            for j in range(4):
                if i * 4 + j in self.figure.image():
                    self.field[i + self.figure.y][j + self.figure.x] = self.figure.color
        self.break_lines()
        self.new_figure()
        if self.intersects():
            self.state = "gameover"

    def go_side(self, dx):
        old_x = self.figure.x
        self.figure.x += dx
        if self.intersects():
            self.figure.x = old_x

    def rotate(self):
        old_rotation = self.figure.rotation
        self.figure.rotate()
        if self.intersects():
            self.figure.rotation = old_rotation

# Define some colors
# from https://stackoverflow.com/questions/3380726/converting-a-rgb-color-tuple-to-a-six-digit-code
BLACK = '#%02x%02x%02x' % (0, 0, 0)
WHITE = '#%02x%02x%02x' % (255, 255, 255)
GRAY = '#%02x%02x%02x' % (128, 128, 128)

done = False
fps = 25
game = Tetris(20, 10)
counter = 0

pressing_down = False

def key_down(eve):
    key = eve.keyCode
    #if event.type == pygame.QUIT:
    # 32 is pause
    if key == 32:
        done = True
    # 82 is r key to rotate
    if key == 82:
        game.rotate()
    # 40 is down key
    if key == 40:
        pressing_down = True
    # 37 is left key
    if key == 37:
        game.go_side(-1)
    # 39 is right key
    if key == 39:
        game.go_side(1)
    # 68 is d key to move block to bottom
    if key == 68:
        game.go_space()
    # 27 is escape
    # reset the game
    if key == 27:
        game.__init__(20, 10)

def key_up(eve):
    key = eve.keyCode
    # 40 is down key
    if key == 40:
        pressing_down = False

#while not done:
def do_game():
    global counter
    if game.figure is None:
        game.new_figure()
    counter += 1
    if counter > 100000:
        counter = 0
    if counter % (fps // game.level // 2) == 0 or pressing_down:
        if game.state == "start":
            game.go_down()
    
    for i in range(game.height):
        for j in range(game.width):
            ctx.fillStyle = WHITE
            #ctx.scale(game.zoom, game.zoom)
            ctx.fillRect(game.x + game.zoom * j, game.y + game.zoom * i, game.zoom, game.zoom)
            if game.field[i][j] > 0:
                ctx.fillStyle = '#%02x%02x%02x' % colors[game.field[i][j]]
                ctx.fillRect(game.x + game.zoom * j + 1, game.y + game.zoom * i + 1, game.zoom - 2, game.zoom - 1)
            ctx.lineWidth = 1
            ctx.strokeStyle = GRAY
            ctx.beginPath()
            ctx.rect(game.x + game.zoom * j, game.y + game.zoom * i, game.zoom, game.zoom)
            ctx.stroke()
    if game.figure is not None:
        for i in range(4):
            for j in range(4):
                p = i * 4 + j
                if p in game.figure.image():
                    ctx.fillStyle = '#%02x%02x%02x' % colors[game.figure.color]
                    ctx.fillRect(game.x + game.zoom * (j + game.figure.x) + 1,
                                      game.y + game.zoom * (i + game.figure.y) + 1,
                                      game.zoom - 2, game.zoom - 2)

doc.addEventListener("keydown", key_down)
doc.addEventListener("keyup", key_up)
browser.timer.set_interval(do_game, fps)
</script>
<div id="brython_div"></div>
<div id="brython_div"></div>
<p><span style="color: #ff00ff;"><strong></strong></span><br/><br/><br/><br/><br/><br/></p>
<div id="brython_div"></div>
<div></div>
<div></div>
<div></div>
<div></div>
<div></div>
<div></div>
<div></div>
<div></div>
<div><span style="color: #ff00ff;">網頁搭建run程式html開頭:</span></div>
<div>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 導入 Brython 程式庫 --&gt;
&lt;script src="/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){brython();}
&lt;/script&gt;
&lt;p&gt;1a&lt;/p&gt;
&lt;script type="text/python3"&gt;
#print("可執行 Brython")</pre>
<span style="color: #ff00ff;"><br/></span></div>
<div><span style="color: #ff00ff;"> </span></div>
<div><span style="color: #ff00ff;"></span></div>
<div><span style="color: #ff00ff;">網頁搭建run程式html結尾:</span></div>
<div>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;/script&gt;
&lt;div id="brython_div"&gt;&lt;/div&gt;
</pre>
<span style="color: #ff00ff;"><br/></span></div>